{"version":3,"sources":["components/SideNav/SideNav.js","components/About/About.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/Experiencecard/ExperienceCard.js","components/Experiences/Experiences.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","constants/About.js","constants/Skills.js","constants/Projects.js","constants/Experiences.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleSectionClick","className","src","alt","role","onClick","About","bio","SkillCard","skill","Skills","skills","techSkills","map","industryKnowledge","interpersonalSkills","ProjectCard","project","name","description","link","Projects","projects","projectList","ExperienceCard","experience","companyName","about","Experiences","experiences","experienceList","SectionContainer","selectedHeading","selectedQuote","selectedSection","Portfolio","heading","quote","App","section","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6f6fa17.chunk.js","sourcesContent":["import React from 'react';\n\nimport './sidenav.css';\n\nexport const SideNav = ({ handleSectionClick }) => {\n    return (\n        <div className=\"sidenav\">\n            <img\n                src=\"https://media-exp1.licdn.com/dms/image/C4D03AQGRZ6LrOK2y7Q/profile-displayphoto-shrink_400_400/0?e=1602720000&v=beta&t=yy-O1jjNlBziV5Dan20bcXUZsWsVnQIYy6uSkP9gdBw\"\n                className=\"avatar\"\n                alt=\"avatar\"\n            />\n            <h2 className=\"main-name\">Dhruva Shah</h2>\n            <p className=\"subtitle\">\"A Girl Who Codes\"<span role=\"img\">üë©‚Äçüíª</span></p>\n            <div className=\"sections-list\">\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"about\")}>About Me</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"projects\")}>Education</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"skills\")}>Skills</p>\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"experiences\")}>Experience</p>\n            </div>\n        </div>\n    );\n};","import React from 'react';\n\nimport './about.css';\n\nexport const About = ({ bio }) => {\n    return (\n        <div className=\"about-container\">\n            <p>{bio}</p>\n        </div>\n    )\n}","import React from 'react';\n\nimport './skill-card.css';\n\nexport const SkillCard = ({ skill }) => {\n    return (\n        <div className=\"skill-card\">\n            {skill}\n        </div>\n    )\n}","import React from \"react\";\n\nimport { SkillCard } from \"./../SkillCard/SkillCard\";\n\nimport \"./skills.css\";\n\nexport const Skills = ({ skills }) => {\n  return (\n    <div className=\"skills-container\">\n      <h3>Tech Skills</h3>\n      <div className=\"industry-skill-container\">\n        {skills.techSkills.map((skill) => (\n          <SkillCard skill={skill} />\n        ))}\n      </div>\n      <h3>Industry Knowledge</h3>\n      <div className=\"industry-skill-container\">\n        {skills.industryKnowledge.map((skill) => (\n          <SkillCard skill={skill} />\n        ))}\n      </div>\n\n      <h3>Interpersonal Skills</h3>\n      <div className=\"industry-skill-container\">\n        {skills.interpersonalSkills.map((skill) => (\n          <SkillCard skill={skill} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\n\nimport './project-card.css';\n\nexport const ProjectCard = ({ project }) => {\n    return (\n        <div className=\"project-card\">\n            <p><b></b> {project.name}</p>\n            <p><b></b> {project.description}</p>\n            <p><b></b> {project.link} </p>\n        </div>\n    )\n}","import React from 'react';\n\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\n\nimport './projects.css';\n\nexport const Projects = ({ projects }) => {\n    return (\n        <div className=\"projects-container\">\n            <div className=\"industry-skill-container\">\n                {\n                    projects.projectList.map(project => <ProjectCard project={project} />)\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react'\r\n\r\nimport './Experiencecard.css';\r\n\r\nexport const ExperienceCard = ({ experience }) => {\r\n    return (\r\n        <div className=\"project-card\">\r\n            <p><b>Company Name:</b> {experience.companyName}</p>\r\n            <p><b>Role:</b> {experience.role}</p>\r\n            <p><b>About:</b> {experience.about} </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { ExperienceCard } from '../Experiencecard/ExperienceCard';\r\n\r\nimport './experience.css';\r\n\r\nexport const Experiences = ({ experiences }) => {\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    experiences.experienceList.map(experience => <ExperienceCard experience={experience} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\n\nimport { About } from './../About/About';\nimport { Skills } from './../Skills/Skills';\nimport { Projects } from './../Projects/Projects';\nimport { Experiences } from './../Experiences/Experiences';\n\nimport './section-container.css';\n\nexport const SectionContainer = ({ \n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    projects,\n    experiences }) => {\n    return (\n        <div className=\"section-container\">\n            <div className=\"section-heading-container\">\n                <h1 className=\"main-heading\">{selectedHeading}</h1>\n                <p className=\"main-quote\">{selectedQuote}</p>\n            </div>\n            <div className=\"section-component\">\n                {\n                    {\n                        about: <About bio={about.bio} />,\n                        skills: <Skills skills={skills} />,\n                        projects: <Projects projects={projects} />,\n                        experiences: <Experiences experiences={experiences} />\n                    }[selectedSection]\n                }\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport { SideNav } from './../SideNav/SideNav';\nimport { SectionContainer } from './../SectionContainer/SectionContainer';\n\nimport './portfolio.css';\n\nexport const Portfolio = ({ \n    handleSectionClick,\n    selectedHeading, \n    selectedQuote,\n    selectedSection,\n    about,\n    skills,\n    experiences,\n    projects }) => {\n    return (\n        <div className=\"portfolio-container\">\n            <div className=\"sidenav-container\">\n                <SideNav\n                    handleSectionClick={handleSectionClick}\n                />\n            </div>\n            <div className=\"main-section-container\">\n                <SectionContainer\n                    selectedSection={selectedSection}\n\t\t\t\t\tselectedHeading={selectedHeading}\n\t\t\t\t\tselectedQuote={selectedQuote}\n\t\t\t\t\tabout={about}\n                    skills={skills}\n                    experiences={experiences}\n\t\t\t\t\tprojects={projects} />\n            </div>\n        </div>\n    );\n};","export const about = {\n    heading: \"About Me\",\n    \"quote\": \"If you love life, don't waste time, \\nfor time is what life is made up of explore it too the fullest\",\n    \"bio\": \"An ambivert by nature and a developer by passion, a tech enthusiast who loves expanding the horizon of knowledge every single day thinking there is scope of improvement every single day in the life of the human being.\\n\\n I think a life without challenges and hurdles is boring so be prepare to face it happily\"\n};","export const skills = {\n    heading: \"Skills\",\n    quote: \"Build your skills, not your resume\",\n    techSkills: [\n        \"JavaScript\",\n        \"NodeJS\",\n        \"ReactJS\",\n        \"Angular\",\n        \"C++\",\n        \"C\",\n        \"Django Framework\",\n        \"Python\",\n        \"HTML\",\n        \"CSS\",\n        \"jQuery\",\n        \"Bootstrap\",\n        \"Material Design\",\n        \"MaterializeCSS\",\n        \"Git\",\n        \"GitHub\",\n        \"Gitlab\",\n        \"MongoDB\",\n        \"PostgreSQL\"\n    ],\n    industryKnowledge: [\n    \n        \"Web Content\",\n        \"Frontend\",\n        \"Software\",\n        \"Backend\",\n        \"Design\",\n        \"Web\",\n        \n    ],\n    interpersonalSkills: [\n        \"Communication\",\n        \"Time Management\",\n        \"Project Management\",\n        \"Management\"\n    ]\n};","export const projects = {\n    heading: \"Education\",\n    quote: \"An investment in knowledge pays the best interest\",\n    projectList: [\n        {\n            name: \"Bachelor of Technology (B. Tech)\",\n            description: \"Computer Science and Engineering \",\n            link: \"Indus University,Ahmedabad (2016-2020)\"\n        }, {\n            name: \"Higher Secondary Education\",\n            link: \"Asia English School,Ahmedabad(2014-2016)\"\n        }, {\n            name: \"Secondary Education\",\n            link: \"Asia English School,Ahmedabad(2013-2014)\"\n        }, \n            \n    ]\n}","export const experiences = {\n    heading: \"Experience\",\n    quote: \"Theory without practice is just as incomplete as practice without theory.\",\n    experienceList: [\n        {\n            companyName: \"Teenivo Inc\",\n            role: \"Full Stack Developer\",\n            about: \"Developing APIS using Django Restframework for backend and using React JS for frontend \"\n        }, {\n            companyName: \"Marketing Solutions Pvt Ltd\",\n            role: \"Full Stack Developer\",\n            about: \"Was working on MEAN Stack\"\n        }, {\n            companyName: \"MobileFirst Technologies Pvt Ltd\",\n            role: \" Full Stack Developer\",\n            about: \"Working on various Javascript frameworks and source libraries\"\n        },\n    ]\n};","import React, { Component } from 'react';\n\nimport { Portfolio } from './Portfolio/Portfolio';\n\nimport { about } from './../constants/About';\nimport { skills } from './../constants/Skills';\nimport { projects } from './../constants/Projects';\nimport {experiences} from './../constants/Experiences';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor () {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tselectedSection: \"\",\n\t\t\tselectedHeading: \"\",\n\t\t\tselectedQuote: \"\",\n\t\t\tabout: null,\n\t\t\tskills: null,\n\t\t\tprojects: null,\n\t\t\texperiences: null,\n\t\t};\n\t}\n\n\tcomponentWillMount () {\n\t\tthis.setState ({ \n\t\t\tabout,\n\t\t\tskills,\n\t\t\tprojects,\n\t\t\texperiences,\n\t\t\tselectedHeading: about.heading,\n\t\t\tselectedQuote: about.quote,\n\t\t\tselectedSection: \"about\" \n\t\t});\n\t}\n\n\thandleSectionClick =  (section) => {\n\t\tthis.setState({\n\t\t\tselectedSection: section,\n\t\t\tselectedHeading: this.state[section].heading,\n\t\t\tselectedQuote: this.state[section].quote\n\t\t})\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Portfolio\n\t\t\t\t\thandleSectionClick={this.handleSectionClick}\n\t\t\t\t\tselectedSection={this.state.selectedSection}\n\t\t\t\t\tselectedHeading={this.state.selectedHeading}\n\t\t\t\t\tselectedQuote={this.state.selectedQuote}\n\t\t\t\t\tabout={this.state.about}\n\t\t\t\t\tskills={this.state.skills}\n\t\t\t\t\tprojects={this.state.projects}\n\t\t\t\t\texperiences={this.state.experiences}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}